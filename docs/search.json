[
  {
    "objectID": "tutorials/math_stat_1.html",
    "href": "tutorials/math_stat_1.html",
    "title": "Welcome to Estimators! | Mathematical Statistics 1",
    "section": "",
    "text": "Say we have some data \\(\\mathbf{X}\\). It‚Äôs a vector, so just think of it like a list of \\(n\\) numbers. We want to learn something about how these data came to be. First, we will aggregate our data using a statistic.\n\n\n\n\n\n\nDefinition\n\n\n\nLet \\(X_1, \\cdots, X_n\\) be our data. A statistic is a function of that data. We will denote that statistic with \\(\\delta\\). Crucially, this function cannot contain anything that we don‚Äôt know. It is purely a function of known quantities.\n\n\n\n\nLet‚Äôs say that our data comes from a normal distribution (a ‚Äúbell curve‚Äù). We denote this with \\(X \\sim N(\\mu, \\sigma^2)\\), where \\(\\mu\\) is the mean of the distribution and \\(\\sigma^2\\) is the variance. Also, to make our life easier, say we know the variance \\(\\sigma^2\\). In practice, this will basically never be the case, but it will simplify our math for now.\nWe have infinitely many options for statistics that we can choose. For example, we could use \\(X_1\\) (that is, the first data point in our vector). While we leave some data on the table in that case, it is certainly a statistic since \\(\\delta = X_1\\) is a function of our data, and there are no unknowns.\nAlternatively, we could use the observed mean of our data. We will call it \\(\\overline{X}\\) (pronounced ‚Äú\\(X\\) bar‚Äù), and it is denoted with \\[\n\\delta(\\mathbf{X}) = \\overline{X} = \\frac{1}{n}\\sum_{i=1}^n X_i.\n\\]\nNotice that this is also a statistic! Although it looks much more complicated, we are still using our data and no unknowns. Here, \\(n\\) is the number of data points that we have, which we know. And we know every \\(X_i\\) because each is part of our data vector \\(\\mathbf{X}\\).\n\n\n\n\n\n\nNote\n\n\n\nConstants (e.g., 7) are also statistics, although no data are involved in the calculation. If it feels like you‚Äôre just guessing at random if you do this, you‚Äôre right.\n\n\nNow let‚Äôs look at an example of a function that is not a statistic: \\[\n\\delta(\\mathbf{X}) = T = \\frac{\\overline{X} - \\mu}{\\sigma/\\sqrt{n}}.\n\\] This function will come back in future articles, but for now, recall that we said that we already know the variance \\(\\sigma^2\\). So that means we already know \\(\\sigma\\). We also know \\(n\\), as we mentioned earlier. But \\(\\mu\\) is unknown to us. Because we have an unknown value \\(\\mu\\) in the numerator, \\(T\\) is not a statistic."
  },
  {
    "objectID": "tutorials.html",
    "href": "tutorials.html",
    "title": "Tutorials",
    "section": "",
    "text": "Here is a place to browse my tutorials! Feel free to browse or sort by category on the right side of the page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to Estimators! | Mathematical Statistics 1\n\n\n\nStatistics\n\n\n\n\n\n\n\nMitch Harrison\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOur World in Emissions | TidyTutorial\n\n\n\nData Viz\n\n\n\n\n\n\n\nMitch Harrison\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Our World in Emissions | TidyTuesday\n\n\n\nData Viz\n\n\nTidyTuesday\n\n\n\n\n\n\n\nMitch Harrison\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blogs/demo_blog/demo_blog.html",
    "href": "blogs/demo_blog/demo_blog.html",
    "title": "Demo blog post",
    "section": "",
    "text": "This is where I may do some writing."
  },
  {
    "objectID": "blogs/demo_blog/demo_blog.html#demo-blog",
    "href": "blogs/demo_blog/demo_blog.html#demo-blog",
    "title": "Demo blog post",
    "section": "",
    "text": "This is where I may do some writing."
  },
  {
    "objectID": "projects/dummy_project/dummy_project.html",
    "href": "projects/dummy_project/dummy_project.html",
    "title": "Dummy project",
    "section": "",
    "text": "Here is a sample code block!\n\n\nClick here for code\nlibrary(tidyverse)\ndata &lt;- read_csv(paste0(getwd(), \"/data/data.csv\"))\ndata |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_line(color = \"red\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi, I‚Äôm Mitch. üëã",
    "section": "",
    "text": "After leaving the Navy in 2022, I moved to North Carolina to study data science and political science at Duke University. Finishing my degree cost the military about $60,000 in aid and depleted my savings. Even my parents, who probably thought they could start spending their ‚Äúput their kid through college‚Äù fund on fun things, had to chip in to help. My education was world-class but utterly unattainable for the majority of us. This website is my attempt to turn my course notes, homework, and projects into comprehensible articles for free. If nothing else, future Duke students struggling through their data science degree can look here for a different perspective.\nIf you want my personal, non-academic analysis projects, head to the Projects tab. If you are here to learn, the Tutorials tab is for you! And if you want to sit back and read some plain-language blog posts, there‚Äôs a Blog tab just for you. Of course, if you are curious about the website‚Äôs structure, it is built with R and Quarto, and the code is available by clicking on the GitHub icon at the bottom-left of every page (or click here).\nAccess to information should always be free, so every article here is, and always will be, at no cost. If you want to show financial support, you can buy me a coffee! But I won‚Äôt ever make donor-exclusive educational content, so don‚Äôt feel like you‚Äôre missing out by not donating. It‚Äôs just one way to show thanks.\nI hope you enjoy the site, and feel free to reach out via GitHub issues to make suggestions for articles. Thanks for reading!"
  },
  {
    "objectID": "index.html#the-about-me-page.",
    "href": "index.html#the-about-me-page.",
    "title": "About me",
    "section": "",
    "text": "This is where readers will see information about me, Mitch Harrison."
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blog",
    "section": "",
    "text": "We can browse blog posts here. For example, will take you do a dummy blog post full of nothing (yet).\n\n\n\n\n\n\n\n\n\n\n\n\nDemo blog post\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "tutorials/math_stat_1.html#definition",
    "href": "tutorials/math_stat_1.html#definition",
    "title": "Welcome to Estimators | Mathematical Statistics 1",
    "section": "",
    "text": "This is a note block that you can use to highlight important information."
  },
  {
    "objectID": "tutorials/math_stat_1.html#statistics",
    "href": "tutorials/math_stat_1.html#statistics",
    "title": "Welcome to Estimators! | Mathematical Statistics 1",
    "section": "",
    "text": "Let‚Äôs say that our data comes from a normal distribution (a ‚Äúbell curve‚Äù). We denote this with \\(X \\sim N(\\mu, \\sigma^2)\\), where \\(\\mu\\) is the mean of the distribution and \\(\\sigma^2\\) is the variance. Also, to make our life easier, say we know the variance \\(\\sigma^2\\). In practice, this will basically never be the case, but it will simplify our math for now.\nWe have infinitely many options for statistics that we can choose. For example, we could use \\(X_1\\) (that is, the first data point in our vector). While we leave some data on the table in that case, it is certainly a statistic since \\(\\delta = X_1\\) is a function of our data, and there are no unknowns.\nAlternatively, we could use the observed mean of our data. We will call it \\(\\overline{X}\\) (pronounced ‚Äú\\(X\\) bar‚Äù), and it is denoted with \\[\n\\delta(\\mathbf{X}) = \\overline{X} = \\frac{1}{n}\\sum_{i=1}^n X_i.\n\\]\nNotice that this is also a statistic! Although it looks much more complicated, we are still using our data and no unknowns. Here, \\(n\\) is the number of data points that we have, which we know. And we know every \\(X_i\\) because each is part of our data vector \\(\\mathbf{X}\\).\n\n\n\n\n\n\nNote\n\n\n\nConstants (e.g., 7) are also statistics, although no data are involved in the calculation. If it feels like you‚Äôre just guessing at random if you do this, you‚Äôre right.\n\n\nNow let‚Äôs look at an example of a function that is not a statistic: \\[\n\\delta(\\mathbf{X}) = T = \\frac{\\overline{X} - \\mu}{\\sigma/\\sqrt{n}}.\n\\] This function will come back in future articles, but for now, recall that we said that we already know the variance \\(\\sigma^2\\). So that means we already know \\(\\sigma\\). We also know \\(n\\), as we mentioned earlier. But \\(\\mu\\) is unknown to us. Because we have an unknown value \\(\\mu\\) in the numerator, \\(T\\) is not a statistic."
  },
  {
    "objectID": "tutorials/math_stat_1.html#point-estimator",
    "href": "tutorials/math_stat_1.html#point-estimator",
    "title": "Welcome to Estimators | Mathematical Statistics 1",
    "section": "Point estimator",
    "text": "Point estimator"
  },
  {
    "objectID": "tutorials/math_stat_1.html#point-estimator-example",
    "href": "tutorials/math_stat_1.html#point-estimator-example",
    "title": "Welcome to Estimators! | Mathematical Statistics 1",
    "section": "Point estimator example",
    "text": "Point estimator example\nLet‚Äôs keep going with our data, which comes from a normal distribution. But, to get used to using \\(\\theta\\), say that \\(X \\sim N(\\theta, \\sigma^2)\\). One possible estimator is the example mean \\(\\overline{X}\\) from earlier (i.e., the mean of the observed data). Alternatively, we can use a constant: say 5. Intuitively, it feels like \\(\\hat{\\theta} = \\overline{X}\\) would be a better guess than a simple \\(\\hat{\\theta} = 5\\), because it is actually informed by the data. But how do we quantify that intuition? We will calculate and compare both bias and precision for each.\n\nBias\nBias tells us how often, on average, we get the correct value of our unknown parameter \\(\\theta\\). Mathematically, we hope that the following quantity is as small as possible: \\[\n\\mathbb{E}[\\delta(\\mathbf{X}) | \\theta] - \\theta.\n\\]\nThe confusing-looking term \\(\\mathbb{E}[\\cdot]\\) is the expected value of our estimator, given the value of the unknown parameter \\(\\theta\\). Basically, this is the expected value of \\(\\hat{\\theta}\\). If our estimator \\(\\hat{\\theta}\\) is expected to be exactly correct on average, then this whole term will be 0, which is the smallest possible bias.\n\n\nVariance\nVariance describes the variability of our estimator. Ideally, variance is also small. Intuitively we are less ‚Äúsure‚Äù about our estimate if we have a wider variance. We denote variance with \\(Var(\\delta(\\mathbf{X})|\\theta)\\).\nHowever, notice that both bias and variance are conditional on the true value of our unknown parameter \\(\\theta\\). Thus, we cannot calculate these quantities directly. To deal with this, we will introduce the concept of loss in the next article!"
  },
  {
    "objectID": "projects/tidytuesday_05212024/emissions.html",
    "href": "projects/tidytuesday_05212024/emissions.html",
    "title": "Our World in Emissions | TidyTuesday",
    "section": "",
    "text": "Hello, all! Welcome to TidyTuesday. This week, as climate analysts often do, we are going to get mildly depressing in pursuit of a pretty graph. This time, we will look at emissions from various actors‚Äô coal, natural gas, and cement production. Spoiler: it‚Äôs not good.\nThe data for this week are brought to us by Carbon Majors, who have compiled a database going all the way back to the 1850‚Äôs! The dataset contains emission data for 75 state and non-state actors, but we will aggregate into total emissions by type for the plot. If you want to get more granular in your own plot, check out the data on the TidyTuesday GitHub repository here!\n\n\nClick here for code\nlibrary(tidyverse)\n\n# read data and rename an ugly column ------------------------------------------\nemis&lt;- read_csv(paste0(\n  \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/\",\n  \"data/2024/2024-05-21/emissions.csv\"\n  )\n)\n\nemis &lt;- emis |&gt;\n  rename(emissions = \"total_emissions_MtCO2e\")\n\n# constants for ease of code legibility ----------------------------------------\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\")\nBG_COLOR &lt;- \"#F0F0F0\"\nGRAY &lt;- \"gray35\"\nUN_TEXT &lt;- paste(\n  \"In 1995, the United Nations\\nConference of the Parties met for\\nthe first\", \n  \"time to discuss the looming\\nthreat of climate change. The COP\\nhas\",\n  \"met twenty-eight times since.\"\n)\n\n# data cleanup -----------------------------------------------------------------\nemis |&gt;\n  filter(year &gt;= 1900) |&gt; # lots of near-zero space without this filter\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) # re-order areas\n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) +\n  \n  # UN COP annotation text box -------------------------------------------------\n  annotate(\n    geom = \"segment\",\n    x = 1995,\n    xend = 1995,\n    y = 35500,\n    yend = 20500,\n    linetype = \"solid\",\n    linejoin = \"round\",\n    linewidth = 1,\n    color = \"grey35\",\n    arrow = arrow(type = \"closed\", length = unit(0.2, \"cm\"))\n  ) +\n  annotate(\n    geom = \"rect\",\n    xmin = 1945.5,\n    xmax = 1993.5,\n    ymin = 23500,\n    ymax = 35800,\n    fill = BG_COLOR\n  ) +\n  annotate(\n    geom = \"text\",\n    x = 1992,\n    y = 30000,\n    label = UN_TEXT,\n    color = GRAY,\n    fontface = \"italic\",\n    hjust = \"right\"\n  ) +\n  \n  # replace legend with annotation text ----------------------------------------\n  annotate(\n    geom = \"text\",\n    color = \"white\",\n    x = 2020,\n    y = c(1000, 4700, 13000, 26000),\n    label = c(\"Cement\", \"Natural Gas\", \"Oil & NGL\", \"Coal\"),\n    hjust = \"right\",\n    fontface = \"bold\"\n  ) +\n  \n  # visual style elements (love you, ggthemes) ---------------------------------\n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight() +\n  \n  # customize axis breaks and labels -------------------------------------------\n  scale_x_continuous(breaks = seq(1900, 2020, 20)) +\n  scale_y_continuous(\n    breaks = seq(0, 40000, 5000), \n    label = scales::label_number(scale = 1e-3, suffix = \"k\")\n  ) +\n  labs(\n    x = element_blank(),\n    y = latex2exp::TeX(\"Emissions ($MtCO_2e$)\"),\n    title = \"Our World in Emissions\",\n    subtitle = latex2exp::TeX(\n      paste(\n        \"Emissions are measured in Millions of Tons of $CO_2$ equivalent\",\n        \"($MtCO_2e$)\"\n      )\n    ),\n    caption = paste(\n      \"Made with love by Mitch Harrison\",\n      \"                                                                       \",\n      \"Source: Carbon Majors database and TidyTuesday\"\n    )\n  ) + \n  \n  # theme cleanup --------------------------------------------------------------\n  geom_hline(yintercept = 0, linewidth = 0.7, color = GRAY) + # bold axis\n  theme(\n    legend.position = \"none\", # hide legend\n    axis.title.y = element_text(size = 10),\n    plot.background = element_rect(fill = BG_COLOR)\n  ) \n\n\n\n\n\n\n\n\n\nSo there she is! As we can see, the UN COP seems to be fighting an uphill battle. Emissions are rising, but a good analyst must note the limitations of the data. What jumps out to me is that renewables aren‚Äôt listed here because it‚Äôs only a graph of emissions. For all we know (from this graph), these emissions only produce a small portion of the world‚Äôs energy, and we are arguing about a couple of percentage points. Maybe we have defeated climate change after all!\nOf course, that‚Äôs not the case, but proving that point will require outside data. So, I welcome everyone reading to write a fuller report using more evidence. If nothing else, it would make for some fun data viz practice!\nIf you want a step-by-step guide to how I made this plot, there is a tutorial page here, or even stop by my Discord server and ask me! And, of course, if you appreciate my work enough to buy me a coffee, you can do so here. Thank you for reading, and see you next week!"
  },
  {
    "objectID": "tutorials/tidytuesday_05212024.html",
    "href": "tutorials/tidytuesday_05212024.html",
    "title": "Our World in Emissions | TidyTutorial",
    "section": "",
    "text": "Welcome! If you saw my post for this week‚Äôs TidyTuesday, I‚Äôm glad you liked it enough to learn from it! If not, you can either scroll to the bottom to see the final product or click here to see it. For this plot, we will use an area plot to visualize the global emissions by type going back to 1900. To start, we will use a bare-bones ggplot2 area chart with no bells or whistles to see what we are working with.\n\n\nClick here for code\nlibrary(tidyverse)\n\n# read data and rename an ugly column ------------------------------------------\nemis&lt;- read_csv(paste0(\n  \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/\",\n  \"data/2024/2024-05-21/emissions.csv\"\n  )\n)\n\nemis &lt;- emis |&gt;\n  rename(emissions = \"total_emissions_MtCO2e\")\n\nemis |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9)\n\n\n\n\n\nOkay, we‚Äôve learned a lot. First, there are a lot of categories. A good rule of thumb is that once you get to about seven colors, even non-colorblind humans struggle to differentiate. But there is hope! Notice that there are several types of coal production. Let‚Äôs aggregate them. Second, there is a long tail on the left because of near-zero data. Let‚Äôs bring our limit to the right to get a better look.\n\n\nClick here for code\nemis |&gt;\n  filter(year &gt;= 1900) |&gt; # get rid of that tail\n  mutate(\n    # aggregate coal\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9)\n\n\n\n\n\nMuch better! But to me, having the smallest category (cement) on top feels awkward. Let‚Äôs reorder the categories! I‚Äôll do so in descending order of emissions in the last year.\n\n\nClick here for code\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\") # our desired order\n\nemis |&gt;\n  filter(year &gt;= 1900) |&gt;\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) # re-order \n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9)\n\n\n\n\n\nNow we‚Äôre cooking! It‚Äôs time for some style points. I‚Äôll use my favorite aesthetic cheat code: ggthemes. Let‚Äôs add a theme and color scheme. I‚Äôm going with the FiveThirtyEight theme and a colorblind-friendly palette. I‚Äôll also take this opportunity to adjust the opacity down just a touch. This is a personal choice, but I find it nice to be able to see the grid behind such ink-heavy plots as area plots.\n\n\n\n\n\n\nImportant\n\n\n\nRemember: unless you are making plots for a very small number of people and you know for certain that none are colorblind, making inaccessible plots is inexcusable. Of course, we all make mistakes, so if you ever notice an accessibility issue on my site, reach out and let me know on Discord or via a GitHub issue so I can improve for next time!\n\n\n\n\nClick here for code\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\") # our desired order\n\nemis |&gt;\n  filter(year &gt;= 1900) |&gt;\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) # re-order \n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) + # drop the opacity just a touch\n\n  # add theme and colors (love you, ggthemes) \n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight()\n\n\n\n\n\nAnd just like that, it feels like we are almost there! Let‚Äôs change a few things at once. We will change the background color, add the title/subtitle/axis labels/caption, and format the \\(y\\)-axis to read 30k instead of 30000. That will give us a feel for the final color scheme and how the fonts feel on the page. Because of the subscript ‚Äú2‚Äù in \\(CO_2\\), I will use the latex2exp package use \\(\\LaTeX\\) typesetting in the plot.\n\n\n\n\n\n\nNote\n\n\n\nOne note that is unique to this plot. When we use theme_fivethirtyeight, it removes the \\(y\\)-axis title. So, although we normally wouldn‚Äôt have to explicitly set the axis title to element_text in the theme function, we will here.\n\n\n\n\nClick here for code\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\")\nBG_COLOR &lt;- \"#F0F0F0\" # this will be our background color\n\nemis |&gt;\n  filter(year &gt;= 1900) |&gt;\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) \n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) +\n\n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight() +\n\n  # abbreviate the y axis labels using the scales package\n  scale_y_continuous(label = scales::label_number(scale = 1e-3, suffix = \"k\")) +\n\n  # add labels to the plot -----------------------------------------------------\n  labs(\n    x = element_blank(),\n    y = latex2exp::TeX(\"Emissions ($MtCO_2e$)\"), # LaTeX typesetting with TeX()\n    title = \"Our World in Emissions\",\n    subtitle = latex2exp::TeX(\n      paste(\n        \"Emissions are measured in Millions of Tons of $CO_2$ equivalent\",\n        \"($MtCO_2e$)\"\n      )\n    ),\n    caption = paste(\n      \"Made with love by Mitch Harrison\",\n      # long blank line to \"hack\" a an annotation in the bottom-left corner\n      \"                                                                       \",\n      \"Source: Carbon Majors database and TidyTuesday\"\n    )\n  ) +\n  theme(\n    axis.title.y = element_text(size = 10),\n    plot.background = element_rect(fill = BG_COLOR) # change background color\n  ) \n\n\n\n\n\nYou could submit this plot for public consumption without shame, but we can do better! For example, I think we could safely remove the legend by annotating the colors directly on the plot. Let‚Äôs use a geom_text to do just that. While this entire process has been creative, we are getting into highly subjective territory here. So if you don‚Äôt like these changes, do something else! I would love to see your ideas.\nTo make the annotations, I want the text to be right-justified and directly atop one another. To accomplish that, I will give geom_text a single \\(x\\) value but several \\(y\\) values (one for each category).\n\n\nClick here for code\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\")\nBG_COLOR &lt;- \"#F0F0F0\"\n\nemis |&gt;\n  filter(year &gt;= 1900) |&gt;\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) \n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) +\n\n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight() +\n  scale_y_continuous(label = scales::label_number(scale = 1e-3, suffix = \"k\")) +\n\n  # add annotation text to replace the legend ----------------------------------\n  annotate(\n    geom = \"text\",\n    color = \"white\",\n    x = 2020,\n    y = c(1000, 4700, 13000, 26000),\n    label = c(\"Cement\", \"Natural Gas\", \"Oil & NGL\", \"Coal\"),\n    hjust = \"right\",\n    fontface = \"bold\"\n  ) +\n\n  labs(\n    x = element_blank(),\n    y = latex2exp::TeX(\"Emissions ($MtCO_2e$)\"),\n    title = \"Our World in Emissions\",\n    subtitle = latex2exp::TeX(\n      paste(\n        \"Emissions are measured in Millions of Tons of $CO_2$ equivalent\",\n        \"($MtCO_2e$)\"\n      )\n    ),\n    caption = paste(\n      \"Made with love by Mitch Harrison\",\n      \"                                                                       \",\n      \"Source: Carbon Majors database and TidyTuesday\"\n    )\n  ) +\n\n  theme(\n    legend.position = \"none\", # hide the legend\n    axis.title.y = element_text(size = 10),\n    plot.background = element_rect(fill = BG_COLOR)\n  ) \n\n\n\n\n\nNailed it. Now, I will happily take criticism here. I don‚Äôt love that the ‚ÄúCement‚Äù label isn‚Äôt entirely encompassed by its data. But I think it‚Äôs much cleaner than having a legend drawing our eye away from the plot, so I‚Äôll keep it.\nThe last thing we have to do before we can worry about the big annotation in the middle of the plot is change where the axes break. That is, set the years and emission amount displayed on the x and y axes, respectively. And while I‚Äôm at it, I will use a geom_hline to make the \\(x\\)-axis a bit bolder since it melts into the background a little bit too much for my liking.\n\n\nClick here for code\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\")\nBG_COLOR &lt;- \"#F0F0F0\"\nGRAY &lt;- \"gray35\"\n\nemis |&gt;\n  filter(year &gt;= 1900) |&gt;\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) \n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) +\n\n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight() +\n\n  # change where the axis breaks occur -----------------------------------------\n  scale_x_continuous(breaks = seq(1900, 2020, 20)) +\n  scale_y_continuous(\n    breaks = seq(0, 40000, 5000), \n    label = scales::label_number(scale = 1e-3, suffix = \"k\")\n  ) +\n\n  annotate(\n    geom = \"text\",\n    color = \"white\",\n    x = 2020,\n    y = c(1000, 4700, 13000, 26000),\n    label = c(\"Cement\", \"Natural Gas\", \"Oil & NGL\", \"Coal\"),\n    hjust = \"right\",\n    fontface = \"bold\"\n  ) +\n\n  labs(\n    x = element_blank(),\n    y = latex2exp::TeX(\"Emissions ($MtCO_2e$)\"),\n    title = \"Our World in Emissions\",\n    subtitle = latex2exp::TeX(\n      paste(\n        \"Emissions are measured in Millions of Tons of $CO_2$ equivalent\",\n        \"($MtCO_2e$)\"\n      )\n    ),\n    caption = paste(\n      \"Made with love by Mitch Harrison\",\n      \"                                                                       \",\n      \"Source: Carbon Majors database and TidyTuesday\"\n    )\n  ) +\n\n  geom_hline(yintercept = 0, linewidth = 0.7, color = GRAY) + # bold axis\n  theme(\n    legend.position = \"none\", # hide the legend\n    axis.title.y = element_text(size = 10),\n    plot.background = element_rect(fill = BG_COLOR)\n  ) \n\n\n\n\n\nOnce I write-in the line breaks, I‚Äôll use the annotate function as before. But that‚Äôs not all. By default, there is no background with text annotations, so the grid overlaps the text and decreases legibility. To fix this, I‚Äôll use annotate to put a rectangle the same color as the plot background behind the text, which ‚Äúremoves‚Äù the grid lines behind the text.\nFinally, to accomplish the arrow, we will use our final annotate to draw a line segment and put an arrowhead at the end.\n\n\n\n\n\n\nNote\n\n\n\nNormally, the order that we put things in a ggplot2 pipeline doesn‚Äôt matter. But here, if you put the background rectangle after the text annotation, it will cover the text, rendering it invisible.\n\n\nBecause this is our last edit, I will take this opportunity to make one very oft-forgotten change: write my alt text. Since you‚Äôre here, I know you respect the power of data communication. Alt text lets us communicate with those who sometimes miss out on learning from plots online. As our color palette did for colorblind viewers, we owe it to our non-sighted friends to let them participate.\nAnd finally, I‚Äôll change the aspect ratio of the plot. You may have heard of the golden ratio, which is a ratio that many humans find inherently satisfying to look at. That ratio is approximately 1.618:1. The inverse of that number is 0.618, which will be our horizontal aspect ratio (1.618 is vertical). Because the quarto headers won‚Äôt render with the document, my final header is below:\n#| label: plt-final\n#| fig-width: 8\n#| fig-align: \"center\"\n#| fig-asp: 0.618\n#| fig-alt: |\n#|   This plot is titled Our World in Emissions. It is an area plot that shows\n#|   global emissions over time by type. The types are coal, natural gas,\n#|   cement, and oil and NGL. The plot notes that in 1995, the UN first met to\n#|   discuss the climate threat. The plot shows near-zero emissions from 1900 to\n#|   1920, when a slow increase begins. From there, emission growth seems to be\n#|   exponentially increasing, with no decline since the UN first met. Coal is\n#|   the largest emitter, then oil and NGL, then natural gas, and finally,\n#|   cement.\nNow, let‚Äôs see the plot!\n\n\nClick here for code\n# constants for ease of code legibility ----------------------------------------\nLEVS &lt;- c(\"Coal\", \"Oil & NGL\", \"Natural Gas\", \"Cement\")\nBG_COLOR &lt;- \"#F0F0F0\"\nUN_TEXT &lt;- paste(\n  \"In 1995, the United Nations\\nConference of the Parties met for\\nthe first\", \n  \"time to discuss the looming\\nthreat of climate change. The COP\\nhas\",\n  \"met twenty-eight times since.\"\n)\n\n# data cleanup -----------------------------------------------------------------\nemis |&gt;\n  filter(year &gt;= 1900) |&gt; # lots of near-zero space without this filter\n  mutate(\n    commodity = if_else(str_detect(commodity, \"Coal\"), \"Coal\", commodity),\n    commodity = factor(commodity, levels = LEVS) # re-order areas\n  ) |&gt;\n  group_by(year, commodity) |&gt;\n  summarise(emissions = sum(emissions), .groups = \"drop\") |&gt;\n  \n  # start of plot --------------------------------------------------------------\n  ggplot(aes(x = year, y = emissions, fill = commodity)) +\n  geom_area(alpha = 0.9) +\n  \n  # UN COP annotation text box -------------------------------------------------\n\n  # the arrow\n  annotate(\n    geom = \"segment\",\n    x = 1995,\n    xend = 1995,\n    y = 35500,\n    yend = 20500,\n    linetype = \"solid\",\n    linejoin = \"round\",\n    linewidth = 1,\n    color = \"grey35\",\n    arrow = arrow(type = \"closed\", length = unit(0.2, \"cm\"))\n  ) +\n\n  # the background rectangle (must be before the text)\n  annotate(\n    geom = \"rect\",\n    xmin = 1945.5,\n    xmax = 1993.5,\n    ymin = 23500,\n    ymax = 35800,\n    fill = BG_COLOR\n  ) +\n\n  # annotation text\n  annotate(\n    geom = \"text\",\n    x = 1992,\n    y = 30000,\n    label = UN_TEXT,\n    color = GRAY,\n    fontface = \"italic\",\n    hjust = \"right\"\n  ) +\n  \n  # replace legend with annotation text ----------------------------------------\n  annotate(\n    geom = \"text\",\n    color = \"white\",\n    x = 2020,\n    y = c(1000, 4700, 13000, 26000),\n    label = c(\"Cement\", \"Natural Gas\", \"Oil & NGL\", \"Coal\"),\n    hjust = \"right\",\n    fontface = \"bold\"\n  ) +\n  \n  # visual style elements (love you, ggthemes) ---------------------------------\n  ggthemes::scale_fill_colorblind() +\n  ggthemes::theme_fivethirtyeight() +\n  \n  # customize axis breaks and labels -------------------------------------------\n  scale_x_continuous(breaks = seq(1900, 2020, 20)) +\n  scale_y_continuous(\n    breaks = seq(0, 40000, 5000), \n    label = scales::label_number(scale = 1e-3, suffix = \"k\")\n  ) +\n  labs(\n    x = element_blank(),\n    y = latex2exp::TeX(\"Emissions ($MtCO_2e$)\"),\n    title = \"Our World in Emissions\",\n    subtitle = latex2exp::TeX(\n      paste(\n        \"Emissions are measured in Millions of Tons of $CO_2$ equivalent\",\n        \"($MtCO_2e$)\"\n      )\n    ),\n    caption = paste(\n      \"Made with love by Mitch Harrison\",\n      \"                                                                       \",\n      \"Source: Carbon Majors database and TidyTuesday\"\n    )\n  ) + \n  \n  # theme cleanup --------------------------------------------------------------\n  geom_hline(yintercept = 0, linewidth = 0.7, color = GRAY) + # bold axis\n  theme(\n    legend.position = \"none\", \n    axis.title.y = element_text(size = 10),\n    plot.background = element_rect(fill = BG_COLOR)\n  ) \n\n\n\n\n\n\n\n\n\nNo plot is perfect, but I am happy with what we have accomplished, and I hope you are too! If you have any questions or corrections, feel free to reach out on Discord, and I‚Äôll be happy to help. And, of course, if you want to contribute to this effort financially, you are more than welcome to buy me a coffee.\nThanks for sticking around, and good luck with your TidyTuesday adventures!"
  }
]